import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout

# 1. Sales data
sales_data = np.array([
    [1, 0, 0, 1, 0],  # User 1 bought item 1 and 4
    [0, 1, 1, 0, 0],  # User 2 bought item 2 and 3
    [1, 1, 0, 1, 0],  # User 3 bought item 1, 2 and 4
    [0, 0, 1, 0, 1],  # User 4 bought item 3 and 5
    [1, 0, 0, 0, 1],  # User 5 bought item 1 and 5
])
print("Sales Data Shape:", sales_data.shape)

# 2. Input and target (autoencoder idea)
X = sales_data
y = sales_data

# 3. Build a simple neural network model
model = Sequential([
    Dense(10, activation='relu', input_shape=(5,)),
    Dropout(0.2),
    Dense(5, activation='sigmoid')  # Output: probability of buying items
])

# 4. Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# 5. Train the model
history = model.fit(
    X, y,
    epochs=20,
    batch_size=2,
    verbose=2
)

# 6. Recommend items for a new user
# Suppose new user bought item 1 only
new_user = np.array([[1, 0, 0, 0, 0]])
predictions = model.predict(new_user)

# 7. Show predicted scores
print("\nPredicted item preferences:", predictions)

# Suggest items with score > 0.5
recommended_items = np.where(predictions[0] > 0.5)[0]
print("\nRecommended item indices:", recommended_items)
